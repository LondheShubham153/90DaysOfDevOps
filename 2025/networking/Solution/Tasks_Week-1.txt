This is my Submission for week 1 challange : - 

Week 1: Networking Challenge

Task 1: Understand OSI & TCP/IP Models  

OSI Model and Real-World Examples:  

1.   Application Layer (Layer 7):   Handles user interaction (e.g. HTTP, FTP, DNS)
   - Example: When you type 'www.google.com' , the browser sends an HTTP request at this layer.

2.   Presentation Layer (Layer 6):   Data formatting and encryption (e.g., SSL/TLS)
   - Example: TLS encrypts data before transmission to ensure security.

3.   Session Layer (Layer 5):   Manages sessions between devices (e.g., APIs, WebSockets)
   - Example: Logging into an online banking system maintains a session.

4.   Transport Layer (Layer 4):   Ensures reliable data transfer (e.g., TCP, UDP)
   - Example: TCP ensures reliable file downloads, while UDP is used for streaming videos.

5.   Network Layer (Layer 3):   Handles IP addressing and routing (e.g., IP, ICMP)
   - Example: Routers forward data packets based on IP addresses.

6.   Data Link Layer (Layer 2):   MAC addressing and error detection (e.g., Ethernet, Wi-Fi)
   - Example: A network switch uses MAC addresses to forward data to the correct device.

7.   Physical Layer (Layer 1):   Physical transmission of data (e.g., cables, Wi-Fi signals)
   - Example: Ethernet cables transmit data between routers and computers.

TCP/IP Model:

1.   Application Layer:   HTTP, FTP, DNS, SSH
2.   Transport Layer:   TCP, UDP
3.   Internet Layer:   IP, ICMP, ARP
4.   Network Access Layer:   Ethernet, Wi-Fi


Task 2: Protocols and Ports for DevOps  

Common Networking Protocols and Port Numbers 

| Protocol  | Port | Description |
|-----------|------|------------|
| HTTP      | 80   | Web traffic (non-secure) |
| HTTPS     | 443  | Secure web traffic |
| FTP       | 21   | File Transfer Protocol |
| SSH       | 22   | Secure Shell for remote login |
| DNS       | 53   | Domain Name System |
| SMTP      | 25   | Email sending |
| MySQL     | 3306 | Database communication |
| PostgreSQL| 5432 | Database service |



Task 3: AWS EC2 and Security Groups  


Step-by-Step Guide to Creating AWS Security Groups  

1. Log in to AWS and navigate to the   EC2 Dashboard  .
2. Click   Launch Instance   → Choose   Amazon Linux 2   (Free Tier Eligible).
3. Configure Security Groups:
   - Allow   SSH (Port 22)   from your IP.
   - Allow   HTTP (Port 80)   for web traffic.
   - Allow   HTTPS (Port 443)   for secure traffic.
4. Launch the instance and connect via SSH:
   sh
   ssh -i your-key.pem ec2-user@your-ec2-instance-ip
   
5. Install a web server:
   sh
   sudo yum update -y
   sudo yum install httpd -y
   sudo systemctl start httpd
   sudo systemctl enable httpd
   
6. Access the web server via   http://your-ec2-instance-ip  .


Task 4: Hands-On with Networking Commands  

  Essential Networking Commands & Usage  

1.   ping   (Check connectivity)
   sh
   ping google.com
   
   - Checks if Google’s server is reachable.

2.   traceroute   (Trace packet routes)
   sh
   traceroute google.com
   
   - Shows the path packets take to reach Google.

3.   netstat   (Network statistics)
   sh
   netstat -an
   
   - Lists active network connections.

4.   curl   (Make HTTP requests)
   sh
   curl -I https://www.google.com
   
   - Fetches HTTP headers from Google.

5.   dig   (DNS lookup)
   sh
   dig google.com
   
   - Retrieves DNS records for Google.



